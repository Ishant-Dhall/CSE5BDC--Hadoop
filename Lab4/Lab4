// CSE3BDC/CSE5BDC Lab 04 - Programming in Scala
/*******************************************************************************
 * Exercise 1
 * Declare a variable, initially setting it's value to your name
 * (as a String). Now try changing the same variable to your age (as an Int).
 * What happens and why?
 */
// TODO: Write your code here
var n:String= "Ishant"
println(n)
n = 9

// TODO: Write the reason for the above behavior here
It displays the following error message because of earlier the data type has been declared as a String and now we are passing an Int value in it. "error: type mismatch;
 found   : Int(9)
 required: String
       n=9" 
However, to change the variable from String to Int ( name to age ) we would need to explicitly declare the new data type by doing the following: 
"var n:int= 22
 println(n)"

/*******************************************************************************
 * Exercise 2
 * Use the zip method to write code which calculates the dot product
 * of two vectors. */

val u = List(2, 5, 3)
val v = List(4, 3, 7)
val dot =u.zip(v).map(x=> x._1 * x._2).reduce(_+_)
print(dot)
// TODO: Copy and paste the result here
44


/*******************************************************************************
 * Exercise 3
 * Write a function that returns the character at index n of a given word if
 * the word is long enough - otherwise return '-'. */
 
def extract(word: String, n: Int) : Char = {
  // TODO: Finish defining this function
    if ( word.length() > n ) word(n) else '-'
}

val names = List("Peter", "John", "Mary", "Henry")
val result = names.map(extract(_,4))
print(result)
// TODO: Copy and paste the result here
List(r, -, -, y)



/*******************************************************************************
 * Exercise 4
 * Write a function which prints the maximum value in a sequence. */

 
def find_max(sequence: Seq[Int]) : Int = {
    // TODO: Finish defining this function
       sequence.reduce(Math.max)
}

val numberList = List(4, 7, 2, 1)
find_max(numberList)
// TODO: Copy and paste the result here
res14: Int = 7

val numberArray = Array(4, 7, 2, 1)
find_max(numberArray)
// TODO: Copy and paste the result here

res15: Int = 7




/*******************************************************************************
 * Exercise 5
 * Write a function which, when given two integer sequences, returns
 * a List of the numbers which appear at the same position in both sequences.
 */


def matchedNumbers(a: Seq[Int], b: Seq[Int]) : Seq[Int] = {
    // TODO: Finish defining this function */
    val v= a zip b
     | v.filter( x=> x._1 == x._2).map(x=>x._1)
     | }

val list1 = List(1,2,3,10)
val list2 = List(3,2,1,10)
val mn = matchedNumbers(list1, list2)
// TODO: Copy and paste the result here
mn: Seq[Int] = List(2, 10)



/*******************************************************************************
 * Exercise 6
 * Write a function which, when given two integer sequences, returns
 * a List of the numbers which appear at the same position in both sequences.
 */


def eligibility(person: (String, Int, String)) : Boolean = {
  // TODO: Finish defining this function
    person match {
        case (name,age,gender)
        if (age >13 & gender =="male") => false== 
        println (name +" is too old")
        case (name,age,gender)
        if (age >13 & gender =="female") => false ==
        println (name +" is too old and not male")
        case (name,age,gender)
        if (age <13 & gender =="male") => true
        case (name,age,gender)
        if (age <13 & gender =="female") => false ==
        println (name +" is not male")
    }
}


val people = List(("Harry", 15, "male"), ("Peter", 10, "male"),
                  ("Michele", 20, "female"), ("Bruce", 12, "male"),
                  ("Mary", 2, "female"), ("Max", 22, "male"))
val allowedEntry = people.filter(eligibility(_))
// TODO: Copy and paste the result here
Harry is too old
Michele is too old and not male
Mary is not male
Max is too old

print(allowedEntry)
// TODO: Copy and paste the result here
List((Peter,10,male), (Bruce,12,male))

